name: Build and Deploy

on:
  push:
    branches:
      - main
      - master

jobs:
  # Job to build the project and run tests
  test-and-build:
    name: Test and Build Microservices
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 21

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Unit Tests
        run: mvn clean test -B

      - name: Build Microservices
        run: mvn clean package -B

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: jars
          path: |
            api-gateway/target/*.jar
            discovery-server/target/*.jar
            config-server/target/*.jar
            provider-service/target/*.jar
            user-service/target/*.jar

  # Job to containerize services
  containerize:
    name: Containerize Microservices
    runs-on: ubuntu-latest
    needs: test-and-build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: jars

      # Common Docker Build Step
      - name: Build Docker Images
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest ./api-gateway
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/discovery-server:latest ./discovery-server
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/config-server:latest ./config-server
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/provider-service:latest ./provider-service
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest ./user-service

  # Login to DockerHub and push all images
  push-images:
    name: Push Docker Images to DockerHub
    runs-on: ubuntu-latest
    needs: containerize
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      # Push all Docker images
      - name: Push API Gateway Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/api-gateway:latest

      - name: Push Discovery Server Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/discovery-server:latest

      - name: Push Config Server Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/config-server:latest

      - name: Push Provider Service Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/provider-service:latest

      - name: Push User Service Image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/user-service:latest
