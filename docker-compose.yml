version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    volumes:
      - ./docker/mongodb/data:/data/db

  postgres:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5544:5432"
    environment:
      - POSTGRES_USER=guest
      - POSTGRES_PASSWORD=guest
      - POSTGRES_DB=auth-service
    volumes:
      - ./docker/postgres/data:/var/lib/postgresql/data
      - ./docker/postgres/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - booking-management
    restart: unless-stopped

  zipkin:
    image: openzipkin/zipkin:2.23.2
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - booking-management
    restart: unless-stopped

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - ./docker/rabbitmq/data:/var/lib/rabbitmq
      - ./docker/rabbitmq/logs:/var/log/rabbitmq
    networks:
      - booking-management
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.0.7
    container_name: keycloak
    command:
      [ "start-dev", "--import-realm" ]
    environment:
      KEYCLOAK_ADMIN: guest
      KEYCLOAK_ADMIN_PASSWORD: guest
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/auth-service
      KC_DB_USERNAME: guest
      KC_DB_PASSWORD: guest
      KC_HEALTH_ENABLED: true
    ports:
      - "8800:8080"
    volumes:
      - ./docker/keycloak/data:/opt/keycloak/data/import/
    networks:
      - booking-management
    restart: unless-stopped

networks:
  booking-management:
    driver: bridge
